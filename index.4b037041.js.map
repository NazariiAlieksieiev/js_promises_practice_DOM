{"mappings":"ACEqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAgB,CAAA,EAChB,EAAiB,CAAA,EAErB,SAAS,IAAI,CAAC,gBAAgB,CAAC,QAAS,WAClC,IAQJ,EAAiB,CAAA,EACjB,EAAgB,CAAA,EAChB,EANwB,qGAO1B,GAEA,WAAW,WACJ,GAAkB,IAKrB,EAAiB,CAAA,EACjB,EALsB,uGAO1B,EAAG,IACL,GAGG,IAAI,CAAC,SAAC,CADT,EAEI,SAAS,IAAI,CAAC,kBAAkB,CAAC,YAAa,EAChD,GACC,KAAK,CAAC,SAAC,CADR,EAEE,SAAS,IAAI,CAAC,kBAAkB,CAAC,YAAa,EAChD,GAoBF,AAlBsB,IAAI,QAAQ,SAAC,CAAnC,EACE,IAAI,EAAiB,CAAA,EAMf,EAAiB,WAChB,IACH,EAAiB,CAAA,EACjB,EAPoB,kGASxB,EAEA,SAAS,IAAI,CAAC,gBAAgB,CAAC,QAAS,GACxC,SAAS,IAAI,CAAC,gBAAgB,CAAC,cAAe,EAChD,GAEc,IAAI,CAAC,SAAC,CAApB,EACE,SAAS,IAAI,CAAC,kBAAkB,CAAC,YAAa,EAChD,GAsCA,AApCqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAY,CAAA,EACZ,EAAa,CAAA,EACb,EAAiB,CAAA,EAEf,EAAkB,gGAIxB,SAAS,IAAI,CAAC,gBAAgB,CAAC,QAAS,YAClC,IAIJ,EAAY,CAAA,EAER,AAAa,IACf,EAAiB,CAAA,EACjB,EAAQ,IAEZ,GAEA,SAAS,IAAI,CAAC,gBAAgB,CAAC,cAAe,YACxC,IAIJ,EAAa,CAAA,EAET,GAAa,IACf,EAAiB,CAAA,EACjB,EAAQ,IAEZ,EACF,GAEa,IAAI,CAAC,SAAC,CAAnB,EACE,SAAS,IAAI,CAAC,kBAAkB,CAAC,YAAa,EAChD","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar firstPromise = new Promise(function(resolve, reject) {\n    var clickHappened = false;\n    var promiseSettled = false;\n    document.body.addEventListener(\"click\", function() {\n        if (promiseSettled) return;\n        var successMessage = '<div class=\"success\" data-qa=\"notification\">\\n      <p>First promise was resolved</p>\\n    </div>';\n        promiseSettled = true;\n        clickHappened = true;\n        resolve(successMessage);\n    });\n    setTimeout(function() {\n        if (!clickHappened && !promiseSettled) {\n            var errorMessage = '<div class=\"error\" data-qa=\"notification\">\\n        <p>First promise was rejected</p>\\n      </div>';\n            promiseSettled = true;\n            reject(errorMessage);\n        }\n    }, 3000);\n});\nfirstPromise.then(function(successMessage) {\n    document.body.insertAdjacentHTML(\"beforeend\", successMessage);\n}).catch(function(errorMessage) {\n    document.body.insertAdjacentHTML(\"beforeend\", errorMessage);\n});\nvar secondPromise = new Promise(function(resolve) {\n    var promiseSettled = false;\n    var successMessage = '<div class=\"success\" data-qa=\"notification\">\\n    <p>Second promise was resolved</p>\\n  </div>';\n    var resolvePromise = function() {\n        if (!promiseSettled) {\n            promiseSettled = true;\n            resolve(successMessage);\n        }\n    };\n    document.body.addEventListener(\"click\", resolvePromise);\n    document.body.addEventListener(\"contextmenu\", resolvePromise);\n});\nsecondPromise.then(function(successMessage) {\n    document.body.insertAdjacentHTML(\"beforeend\", successMessage);\n});\nvar thirdPromise = new Promise(function(resolve, reject) {\n    var leftClick = false;\n    var rightClick = false;\n    var promiseSettled = false;\n    var successMessage = '<div class=\"success\" data-qa=\"notification\">\\n    <p>Third promise was resolved</p>\\n  </div>';\n    document.body.addEventListener(\"click\", function() {\n        if (promiseSettled) return;\n        leftClick = true;\n        if (leftClick && rightClick) {\n            promiseSettled = true;\n            resolve(successMessage);\n        }\n    });\n    document.body.addEventListener(\"contextmenu\", function() {\n        if (promiseSettled) return;\n        rightClick = true;\n        if (leftClick && rightClick) {\n            promiseSettled = true;\n            resolve(successMessage);\n        }\n    });\n});\nthirdPromise.then(function(successMessage) {\n    document.body.insertAdjacentHTML(\"beforeend\", successMessage);\n});\n\n//# sourceMappingURL=index.4b037041.js.map\n","'use strict';\n\nconst firstPromise = new Promise((resolve, reject) => {\n  let clickHappened = false;\n  let promiseSettled = false;\n\n  document.body.addEventListener('click', () => {\n    if (promiseSettled) {\n      return;\n    }\n\n    const successMessage = `<div class=\"success\" data-qa=\"notification\">\n      <p>First promise was resolved</p>\n    </div>`;\n\n    promiseSettled = true;\n    clickHappened = true;\n    resolve(successMessage);\n  });\n\n  setTimeout(() => {\n    if (!clickHappened && !promiseSettled) {\n      const errorMessage = `<div class=\"error\" data-qa=\"notification\">\n        <p>First promise was rejected</p>\n      </div>`;\n\n      promiseSettled = true;\n      reject(errorMessage);\n    }\n  }, 3000);\n});\n\nfirstPromise\n  .then((successMessage) => {\n    document.body.insertAdjacentHTML('beforeend', successMessage);\n  })\n  .catch((errorMessage) => {\n    document.body.insertAdjacentHTML('beforeend', errorMessage);\n  });\n\nconst secondPromise = new Promise((resolve) => {\n  let promiseSettled = false;\n\n  const successMessage = `<div class=\"success\" data-qa=\"notification\">\n    <p>Second promise was resolved</p>\n  </div>`;\n\n  const resolvePromise = () => {\n    if (!promiseSettled) {\n      promiseSettled = true;\n      resolve(successMessage);\n    }\n  };\n\n  document.body.addEventListener('click', resolvePromise);\n  document.body.addEventListener('contextmenu', resolvePromise);\n});\n\nsecondPromise.then((successMessage) => {\n  document.body.insertAdjacentHTML('beforeend', successMessage);\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let leftClick = false;\n  let rightClick = false;\n  let promiseSettled = false;\n\n  const successMessage = `<div class=\"success\" data-qa=\"notification\">\n    <p>Third promise was resolved</p>\n  </div>`;\n\n  document.body.addEventListener('click', () => {\n    if (promiseSettled) {\n      return;\n    }\n\n    leftClick = true;\n\n    if (leftClick && rightClick) {\n      promiseSettled = true;\n      resolve(successMessage);\n    }\n  });\n\n  document.body.addEventListener('contextmenu', () => {\n    if (promiseSettled) {\n      return;\n    }\n\n    rightClick = true;\n\n    if (leftClick && rightClick) {\n      promiseSettled = true;\n      resolve(successMessage);\n    }\n  });\n});\n\nthirdPromise.then((successMessage) => {\n  document.body.insertAdjacentHTML('beforeend', successMessage);\n});\n"],"names":["Promise","resolve","reject","clickHappened","promiseSettled","document","body","addEventListener","setTimeout","then","successMessage","insertAdjacentHTML","catch","errorMessage","secondPromise","resolvePromise","thirdPromise","leftClick","rightClick"],"version":3,"file":"index.4b037041.js.map"}